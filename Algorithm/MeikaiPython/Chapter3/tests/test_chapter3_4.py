import io

import src.chapter3_4 as sut


class TestChapter3_4:
    def test_chained_bash_test(self, monkeypatch, capfd):
        monkeypatch.setattr(
            "sys.stdin",
            io.StringIO(
                (
                    "1\n"
                    "1\n"
                    "赤尾\n"
                    "1\n"
                    "5\n"
                    "武田\n"
                    "1\n"
                    "10\n"
                    "小野\n"
                    "1\n"
                    "12\n"
                    "鈴木\n"
                    "1\n"
                    "14\n"
                    "神埼\n"
                    "3\n"
                    "5\n"
                    "4\n"
                    "2\n"
                    "14\n"
                    "4\n"
                    "5\n"
                )
            ),
        )

        sut.chained_bash_test()
        out, err = capfd.readouterr()
        assert out == (
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "値:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "値:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "値:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "値:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "値:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "そのキーを持つ値は武田です。\n"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "0\n"
            "1 → 14（神埼） → 1（赤尾）\n"
            "2\n"
            "3\n"
            "4\n"
            "5 → 5（武田）\n"
            "6\n"
            "7\n"
            "8\n"
            "9\n"
            "10 → 10（小野）\n"
            "11\n"
            "12 → 12（鈴木）\n"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "キー:"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
            "0\n"
            "1 → 1（赤尾）\n"
            "2\n"
            "3\n"
            "4\n"
            "5 → 5（武田）\n"
            "6\n"
            "7\n"
            "8\n"
            "9\n"
            "10 → 10（小野）\n"
            "11\n"
            "12 → 12（鈴木）\n"
            "(1)追加 (2)削除 (3)探索 (4)ダンプ (5)終了:"
        )
        assert err == ""
